---
import { asText } from '@prismicio/client';
import { PrismicHtml } from '..';
import { fetchDocumentsByType } from '../../lib/prismic/queries';
import '../../styles/components/slices/events-index.scss';

const { headline, description } = Astro.props;

const events = await fetchDocumentsByType({
  type: 'event',
  options: {
    fetchLinks: ['plane.name'],
  }
}) || [];
---

<section class="events-index container">
  {!!headline?.length && (
    <h2 class="events-index__title text-4">
      {asText(headline)}
    </h2>
  )}

  {!!description?.length && (
    <div class="events-index__content richtext">
      <PrismicHtml html={description} />
    </div>
  )}

  {!!events.length && (
    <ul class="events-index__list">
      {events.map(({ uid, data: { event_name, description: desc, winner_gold } = {} }) => (
        <li>
          <a href={`/#${uid}`} class="events-index__list__item card">
            <div class="column__title">
              <h3 class="text-3">{asText(event_name)}</h4>
              <PrismicHtml html={desc} />
            </div>
            <div class="column__winner">
              <p class="text-0">
                <strong>Winner:</strong> {asText(winner_gold.data?.name) || 'TBA'}
              </p>
            </div>
          </a>
        </li>
      ))}
    </ul>
  )}
</section>