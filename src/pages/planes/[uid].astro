---
import { asText } from '@prismicio/client';
import { Image } from 'astro:assets';
import { Card } from '../../components';
import { fetchDocumentsByType } from '../../lib/prismic/queries';
import Layout from '../../layouts/Layout.astro';
import '../../styles/pages/plane-detail.scss';

export async function getStaticPaths() {
  const results = await fetchDocumentsByType({
    type: 'plane',
    options: {
      fetchLinks: [
        'event.event_name',
        'pilot.name',
        'pilot.avatar'
      ],
    }
  }) || [];

  return results.map(({ uid, data }) => ({
    params: { uid },
    props: { ...data }
  }));
}

const {
  name = [],
  event = {},
  photo = {},
  pilot = {}
} = Astro.props;

const planePhoto = !!photo?.url?.length ? photo : null;

const hasPilot = !!pilot?.id?.length;
const avatarSize = 60;
const pilotPhoto = hasPilot && !!pilot?.data?.avatar?.url?.length
  ? pilot?.data?.avatar
  : null;

export const prerender = true;
---

<Layout
  id="plane-detail"
  class="container"
  title={asText(name) || 'Plane'}
>
  <h1 class="text-5">{asText(name)}</h1>

  <Card photo={planePhoto}>
    {hasPilot && (
      <div class="card__pilot">
        {pilotPhoto && (
          <Image
            src={pilotPhoto.url}
            width={avatarSize}
            height={avatarSize}
            alt={pilotPhoto.alt || ''}
          />
        )}
        <div class="card__pilot__title desktop-only">
          <h2 class="text--1">Pilot:&nbsp;</h2>
          <p class="text-1">{asText(pilot?.data?.name)}</p>
        </div>
      </div>
    )}

    {event?.data?.event_name && (
      <div class="card__desc">
        <h2 class="text-0">Event</h2>
        <p class="text-4">{asText(event?.data?.event_name)}</p>
      </div>
    )}
  </Card>
</Layout>