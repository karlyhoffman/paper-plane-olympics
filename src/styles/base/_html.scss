@use "../mixins/breakpoints" as *;

html {
  background-color: var(--color-white);
  color: var(--color-black);
  font-size: 100%;
}

body {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow-x: clip;
  font-size: clamp(1rem, 0.9643rem + 0.1786vi, 1.125rem);
  @include text-regular;

  & > * {
    width: 100%;
  }
}

p {
  margin-bottom: var(--layout-spacing-xxs);
}

a {
  cursor: pointer;
  color: inherit;
  text-decoration: none;
  transition: 150ms ease-in-out;
  transition-property: color, text-decoration-color;

  &:not(.card) {
    @include text-bold;
    text-decoration: underline;
    text-decoration-color: transparent;

    &:hover {
      color: var(--color-gray);
      text-decoration-color: var(--color-gray);
    }
  }
}

button {
  cursor: pointer;
}

.btn {
  cursor: pointer;
  display: inline-block;
  padding: var(--layout-spacing-xs) var(--layout-spacing-sm);
  border: var(--layout-border);
  border-radius: var(--layout-border-radius);
  transition: 150ms ease-in-out;
  transition-property: background-color, color;

  &:hover {
    background-color: var(--color-black);
    color: var(--color-white);
  }

  &--sm {
    padding-top: var(--layout-gutter-sm);
    padding-bottom: var(--layout-gutter-sm);
  }
}

@mixin container {
  max-width: 1000px;
  margin-inline: auto;
  padding-inline: var(--layout-gutter-sm);

  @include media-breakpoint-up(md) {
    padding-inline: var(--layout-gutter);
  }
}

.container {
  @include container;

  &--sm {
    @include container;
    max-width: 730px;
  }

  &--lg {
    @include container;
    max-width: 1200px;
  }
}
